{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The location into which regionally scoped resources should be deployed. Note that Front Door is a global resource."
      }
    },
    "vnetIPPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "The IP address prefix (CIDR range) to use when deploying the virtual network."
      }
    },
    "apiManagementSubnetIPPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/24",
      "metadata": {
        "description": "The IP address prefix (CIDR range) to use when deploying the API Management subnet within the virtual network."
      }
    },
    "apiManagementServiceName": {
      "type": "string",
      "defaultValue": "[format('apim-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "The name of the API Management service instance to create. This must be globally unique."
      }
    },
    "apiManagementPublisherName": {
      "type": "string",
      "defaultValue": "Contoso",
      "metadata": {
        "description": "The name of the API publisher. This information is used by API Management."
      }
    },
    "apiManagementPublisherEmail": {
      "type": "string",
      "defaultValue": "admin@contoso.com",
      "metadata": {
        "description": "The email address of the API publisher. This information is used by API Management."
      }
    },
    "apiManagementSku": {
      "type": "string",
      "defaultValue": "Developer",
      "allowedValues": [
        "Developer",
        "Premium"
      ],
      "metadata": {
        "description": "The name of the SKU to use when creating the API Management service instance. This must be a SKU that supports virtual network integration."
      }
    },
    "apiManagementSkuCount": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "The number of worker instances of your API Management service that should be provisioned."
      }
    },
    "frontDoorProxyEndpointName": {
      "type": "string",
      "defaultValue": "[format('afd-proxy-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "The name of the Front Door endpoint to create for the API Management proxy gateway. This must be globally unique."
      }
    },
    "frontDoorDeveloperPortalEndpointName": {
      "type": "string",
      "defaultValue": "[format('afd-portal-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "The name of the Front Door endpoint to create for the API Management developer portal. This must be globally unique."
      }
    },
    "frontDoorSkuName": {
      "type": "string",
      "defaultValue": "Standard_AzureFrontDoor",
      "allowedValues": [
        "Standard_AzureFrontDoor",
        "Premium_AzureFrontDoor"
      ],
      "metadata": {
        "description": "The name of the SKU to use when creating the Front Door profile."
      }
    }
  },
  "functions": [],
  "variables": {
    "apiManagementFrontDoorIdNamedValueName": "FrontDoorId",
    "apiManagementVirtualNetworkType": "External"
  },
  "resources": [
    {
      "type": "Microsoft.ApiManagement/service/namedValues",
      "apiVersion": "2020-06-01-preview",
      "name": "[format('{0}/{1}', parameters('apiManagementServiceName'), variables('apiManagementFrontDoorIdNamedValueName'))]",
      "properties": {
        "displayName": "FrontDoorId",
        "value": "[reference(resourceId('Microsoft.Resources/deployments', 'front-door'), '2019-10-01').outputs.frontDoorId.value]",
        "secret": true
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'api-management')]",
        "[resourceId('Microsoft.Resources/deployments', 'front-door')]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/policies",
      "apiVersion": "2020-06-01-preview",
      "name": "[format('{0}/{1}', parameters('apiManagementServiceName'), 'policy')]",
      "properties": {
        "value": "[format('<policies><inbound><check-header name=\"X-Azure-FDID\" failed-check-httpcode=\"403\" failed-check-error-message=\"Invalid request.\" ignore-case=\"false\"><value>{{{{{0}}}}}</value></check-header></inbound><backend><forward-request /></backend></policies>', variables('apiManagementFrontDoorIdNamedValueName'))]",
        "format": "xml"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/namedValues', parameters('apiManagementServiceName'), variables('apiManagementFrontDoorIdNamedValueName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "network",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "vnetIPPrefix": {
            "value": "[parameters('vnetIPPrefix')]"
          },
          "apiManagementSubnetIPPrefix": {
            "value": "[parameters('apiManagementSubnetIPPrefix')]"
          }
        },
        "templateLink": {
            "uri": "",
            "contentVersion": "1.0.0.0"
        } 
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "api-management",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "serviceName": {
            "value": "[parameters('apiManagementServiceName')]"
          },
          "publisherName": {
            "value": "[parameters('apiManagementPublisherName')]"
          },
          "publisherEmail": {
            "value": "[parameters('apiManagementPublisherEmail')]"
          },
          "skuName": {
            "value": "[parameters('apiManagementSku')]"
          },
          "skuCount": {
            "value": "[parameters('apiManagementSkuCount')]"
          },
          "subnetResourceId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'network'), '2019-10-01').outputs.apiManagementSubnetResourceId.value]"
          },
          "virtualNetworkType": {
            "value": "[variables('apiManagementVirtualNetworkType')]"
          }
        },
        "templateLink": {
            "uri": "",
            "contentVersion": "1.0.0.0"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'network')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "front-door",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "skuName": {
            "value": "[parameters('frontDoorSkuName')]"
          },
          "proxyEndpointName": {
            "value": "[parameters('frontDoorProxyEndpointName')]"
          },
          "developerPortalEndpointName": {
            "value": "[parameters('frontDoorDeveloperPortalEndpointName')]"
          },
          "proxyOriginHostName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'api-management'), '2019-10-01').outputs.apiManagementProxyHostName.value]"
          },
          "developerPortalOriginHostName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'api-management'), '2019-10-01').outputs.apiManagementDeveloperPortalHostName.value]"
          }
        },
        "templateLink": {
            "uri": "",
            "contentVersion": "1.0.0.0"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'api-management')]"
      ]
    }
  ],
  "outputs": {
    "frontDoorEndpointApiManagementProxyHostName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'front-door'), '2019-10-01').outputs.frontDoorProxyEndpointHostName.value]"
    },
    "frontDoorEndpointApiManagementPortalHostName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'front-door'), '2019-10-01').outputs.frontDoorDeveloperPortalEndpointHostName.value]"
    },
    "apiManagementProxyHostName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'api-management'), '2019-10-01').outputs.apiManagementProxyHostName.value]"
    },
    "apiManagementPortalHostName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'api-management'), '2019-10-01').outputs.apiManagementDeveloperPortalHostName.value]"
    }
  }
}